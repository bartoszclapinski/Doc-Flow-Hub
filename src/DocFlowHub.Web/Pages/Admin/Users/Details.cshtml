@page "{id?}"
@model DocFlowHub.Web.Pages.Admin.Users.DetailsModel
@{
    ViewData["Title"] = "User Details";
    ViewData["ActivePage"] = "Users";
    Layout = "_AdminLayout";
}

<div class="row mb-4">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-page="/Admin/Index">Admin Dashboard</a></li>
                <li class="breadcrumb-item"><a asp-page="./Index">Users</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.UserDetail?.Email</li>
            </ol>
        </nav>
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2>@ViewData["Title"]</h2>
                <p class="text-muted mb-0">Complete user profile and activity overview</p>
            </div>
            <div class="d-flex gap-2">
                <a asp-page="./Edit" asp-route-id="@Model.UserDetail?.Id" class="btn btn-outline-primary">
                    <i class="bi bi-pencil me-1"></i>Edit User
                </a>
                <a asp-page="./Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-1"></i>Back to Users
                </a>
            </div>
        </div>
    </div>
</div>

@if (Model.UserDetail == null)
{
    <div class="alert alert-danger">
        <i class="bi bi-exclamation-triangle me-2"></i>
        User not found or access denied.
    </div>
}
else
{
    <!-- User Profile Header -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-2 text-center">
                    <div class="bg-primary bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center" 
                         style="width: 80px; height: 80px;">
                        <i class="bi bi-person text-primary" style="font-size: 2.5rem;"></i>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4 class="mb-1">@($"{Model.UserDetail.FirstName} {Model.UserDetail.LastName}".Trim())</h4>
                    <p class="text-muted mb-2">@Model.UserDetail.Email</p>
                    <div class="d-flex align-items-center gap-3">
                        <span class="badge bg-@(Model.UserDetail.IsActive ? "success" : "danger")">
                            @(Model.UserDetail.IsActive ? "Active" : "Inactive")
                        </span>
                        @if (Model.UserDetail.EmailConfirmed)
                        {
                            <span class="badge bg-success bg-opacity-10 text-success">
                                <i class="bi bi-check-circle me-1"></i>Email Verified
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-warning bg-opacity-10 text-warning">
                                <i class="bi bi-exclamation-circle me-1"></i>Email Unverified
                            </span>
                        }
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="fw-bold text-primary fs-5">@Model.UserDetail.DocumentCount</div>
                            <small class="text-muted">Documents</small>
                        </div>
                        <div class="col-4">
                            <div class="fw-bold text-success fs-5">@Model.UserDetail.TeamCount</div>
                            <small class="text-muted">Teams</small>
                        </div>
                        <div class="col-4">
                            <div class="fw-bold text-info fs-5">@Model.UserDetail.Roles.Count</div>
                            <small class="text-muted">Roles</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- User Information -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-person-vcard me-2"></i>User Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label fw-bold">User ID</label>
                        <div class="form-control-plaintext">@Model.UserDetail.Id</div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">Full Name</label>
                        <div class="form-control-plaintext">
                            @if (!string.IsNullOrEmpty(Model.UserDetail.FirstName) || !string.IsNullOrEmpty(Model.UserDetail.LastName))
                            {
                                @($"{Model.UserDetail.FirstName} {Model.UserDetail.LastName}".Trim())
                            }
                            else
                            {
                                <span class="text-muted">Not provided</span>
                            }
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">Email Address</label>
                        <div class="form-control-plaintext">@Model.UserDetail.Email</div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">Account Created</label>
                        <div class="form-control-plaintext">@Model.UserDetail.CreatedAt.ToString("MMMM dd, yyyy 'at' HH:mm")</div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">Last Login</label>
                        <div class="form-control-plaintext">
                            @if (Model.UserDetail.LastLoginAt.HasValue)
                            {
                                @Model.UserDetail.LastLoginAt.Value.ToString("MMMM dd, yyyy 'at' HH:mm")
                            }
                            else
                            {
                                <span class="text-muted">Never logged in</span>
                            }
                        </div>
                    </div>
                    
                    <div class="mb-0">
                        <label class="form-label fw-bold">Account Status</label>
                        <div class="form-control-plaintext">
                            <div class="d-flex align-items-center gap-2">
                                <span class="badge bg-@(Model.UserDetail.IsActive ? "success" : "danger")">
                                    @(Model.UserDetail.IsActive ? "Active" : "Inactive")
                                </span>
                                @if (Model.UserDetail.EmailConfirmed)
                                {
                                    <span class="badge bg-success bg-opacity-10 text-success">Verified</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning bg-opacity-10 text-warning">Unverified</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Roles and Permissions -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-person-badge me-2"></i>Roles & Permissions
                    </h5>
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="manageRoles('@Model.UserDetail.Id')">
                        <i class="bi bi-gear"></i>
                    </button>
                </div>
                <div class="card-body">
                    @if (Model.UserDetail.Roles.Any())
                    {
                        <div class="d-flex flex-column gap-2">
                            @foreach (var role in Model.UserDetail.Roles)
                            {
                                <div class="d-flex justify-content-between align-items-center p-2 bg-light rounded">
                                    <div>
                                        <div class="fw-medium">@role</div>
                                        <small class="text-muted">Role permissions apply</small>
                                    </div>
                                    <i class="bi bi-check-circle text-success"></i>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="bi bi-person-x text-muted" style="font-size: 2rem;"></i>
                            <p class="text-muted mt-2 mb-0">No roles assigned</p>
                            <small class="text-muted">User has limited access</small>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Activity & Statistics -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-activity me-2"></i>Activity Summary
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-6">
                            <div class="text-center p-3 bg-primary bg-opacity-10 rounded">
                                <div class="fw-bold text-primary fs-4">@Model.UserDetail.DocumentCount</div>
                                <small class="text-muted">Documents</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 bg-success bg-opacity-10 rounded">
                                <div class="fw-bold text-success fs-4">@Model.UserDetail.TeamCount</div>
                                <small class="text-muted">Teams</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 bg-info bg-opacity-10 rounded">
                                <div class="fw-bold text-info fs-4">@((Model.UserDetail.TotalStorageUsed / 1024.0 / 1024.0).ToString("F1"))</div>
                                <small class="text-muted">MB Used</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 bg-warning bg-opacity-10 rounded">
                                <div class="fw-bold text-warning fs-4">@((DateTime.UtcNow - Model.UserDetail.CreatedAt).Days)</div>
                                <small class="text-muted">Days Active</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3 pt-3 border-top">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span class="small text-muted">Account Health</span>
                            <span class="badge bg-success">Excellent</span>
                        </div>
                        <div class="progress" style="height: 6px;">
                            <div class="progress-bar bg-success" style="width: 85%"></div>
                        </div>
                        <small class="text-muted">Based on activity and compliance</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h6 class="mb-1">User Management Actions</h6>
                    <p class="text-muted mb-0">Perform administrative actions on this user account</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="btn-group">
                        <a asp-page="./Edit" asp-route-id="@Model.UserDetail.Id" class="btn btn-outline-primary">
                            <i class="bi bi-pencil me-1"></i>Edit
                        </a>
                        <button type="button" class="btn btn-outline-info" onclick="resetPassword('@Model.UserDetail.Id')">
                            <i class="bi bi-key me-1"></i>Reset Password
                        </button>
                        @if (Model.UserDetail.Email != "admin@docflowhub.com")
                        {
                            <button type="button" class="btn btn-outline-danger" onclick="confirmAction('delete', '@Model.UserDetail.Id', '@Model.UserDetail.Email')">
                                <i class="bi bi-trash me-1"></i>Delete
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function manageRoles(userId) {
            // TODO: Implement role management modal or redirect
            console.log("Managing roles for user:", userId);
            alert("Role management functionality will be implemented in the next update.");
        }
        
        function resetPassword(userId) {
            if (confirm("Are you sure you want to reset this user's password? They will receive an email with instructions.")) {
                // TODO: Implement password reset functionality
                console.log("Resetting password for user:", userId);
                alert("Password reset functionality will be implemented in the next update.");
            }
        }
        
        function confirmAction(action, userId, userEmail) {
            const actionText = action === "delete" ? "delete" : action;
            const message = `Are you sure you want to ${actionText} the user: ${userEmail}? This action cannot be undone.`;
            
            if (confirm(message)) {
                if (action === "delete") {
                    // TODO: Implement user deletion
                    console.log("Deleting user:", userId);
                    alert("User deletion functionality will be implemented in the next update.");
                }
            }
        }
    </script>
} 