@page "{id?}"
@model DocFlowHub.Web.Pages.Admin.Users.EditModel
@{
    ViewData["Title"] = "Edit User";
    ViewData["ActivePage"] = "Users";
    Layout = "_AdminLayout";
}

<div class="row mb-4">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-page="/Admin/Index">Admin Dashboard</a></li>
                <li class="breadcrumb-item"><a asp-page="./Index">Users</a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit @Model.Input?.Email</li>
            </ol>
        </nav>
        <h2>@ViewData["Title"]</h2>
        <p class="text-muted">Update user account information and settings.</p>
    </div>
</div>

@if (Model.Input == null)
{
    <div class="alert alert-danger">
        <i class="bi bi-exclamation-triangle me-2"></i>
        User not found or access denied.
    </div>
}
else
{
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <form method="post">
                <input type="hidden" asp-for="Input.Id" />
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <!-- Personal Information -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person me-2"></i>Personal Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Input.FirstName" class="form-label fw-bold">First Name</label>
                                <input asp-for="Input.FirstName" class="form-control" placeholder="Enter first name" />
                                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Input.LastName" class="form-label fw-bold">Last Name</label>
                                <input asp-for="Input.LastName" class="form-control" placeholder="Enter last name" />
                                <span asp-validation-for="Input.LastName" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label asp-for="Input.Email" class="form-label fw-bold">
                                    Email Address <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Input.Email" class="form-control" type="email" />
                                <span asp-validation-for="Input.Email" class="text-danger"></span>
                                <div class="form-text">Changing email will require re-verification.</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Account Security -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-shield-lock me-2"></i>Account Security
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Input.NewPassword" class="form-label fw-bold">New Password</label>
                                <input asp-for="Input.NewPassword" class="form-control" type="password" placeholder="Leave blank to keep current password" />
                                <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                                <div class="form-text">Leave blank to keep current password. Minimum 6 characters if changing.</div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Input.ConfirmPassword" class="form-label fw-bold">Confirm New Password</label>
                                <input asp-for="Input.ConfirmPassword" class="form-control" type="password" placeholder="Confirm new password" />
                                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" asp-for="Input.EmailConfirmed" id="emailConfirmed" />
                                    <label class="form-check-label" for="emailConfirmed">
                                        Email Confirmed
                                    </label>
                                    <div class="form-text">Check to mark email as verified.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" asp-for="Input.SendPasswordChangeEmail" id="sendPasswordEmail" />
                                    <label class="form-check-label" for="sendPasswordEmail">
                                        Notify User of Password Change
                                    </label>
                                    <div class="form-text">Send email notification if password is changed.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Role Management -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-success text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person-badge me-2"></i>Role Assignment
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.AvailableRoles.Any())
                        {
                            <div class="row">
                                @foreach (var role in Model.AvailableRoles)
                                {
                                    <div class="col-md-6 mb-3">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" 
                                                   name="Input.SelectedRoles" value="@role.Name" 
                                                   id="role-@role.Id"
                                                   @(Model.Input.SelectedRoles.Contains(role.Name) ? "checked" : "") />
                                            <label class="form-check-label" for="role-@role.Id">
                                                <strong>@role.Name</strong>
                                                @if (!string.IsNullOrEmpty(role.Description))
                                                {
                                                    <br><small class="text-muted">@role.Description</small>
                                                }
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i>
                                <strong>Current Roles:</strong> @(Model.Input.SelectedRoles.Any() ? string.Join(", ", Model.Input.SelectedRoles) : "No roles assigned")
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                No roles are available. Please create roles first.
                            </div>
                        }
                    </div>
                </div>

                <!-- User Statistics (Read-only) -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-info text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-graph-up me-2"></i>Account Statistics
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 text-center">
                                <div class="bg-primary bg-opacity-10 rounded p-3">
                                    <div class="fw-bold text-primary fs-4">@Model.UserStats?.DocumentCount ?? 0</div>
                                    <small class="text-muted">Documents</small>
                                </div>
                            </div>
                            <div class="col-md-3 text-center">
                                <div class="bg-success bg-opacity-10 rounded p-3">
                                    <div class="fw-bold text-success fs-4">@Model.UserStats?.TeamCount ?? 0</div>
                                    <small class="text-muted">Teams</small>
                                </div>
                            </div>
                            <div class="col-md-3 text-center">
                                <div class="bg-warning bg-opacity-10 rounded p-3">
                                    <div class="fw-bold text-warning fs-4">@((Model.UserStats?.TotalStorageUsed / 1024.0 / 1024.0)?.ToString("F1") ?? "0.0")</div>
                                    <small class="text-muted">MB Used</small>
                                </div>
                            </div>
                            <div class="col-md-3 text-center">
                                <div class="bg-info bg-opacity-10 rounded p-3">
                                    <div class="fw-bold text-info fs-4">@((DateTime.UtcNow - (Model.UserStats?.CreatedAt ?? DateTime.UtcNow)).Days)</div>
                                    <small class="text-muted">Days Active</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-3 pt-3 border-top">
                            <div class="row">
                                <div class="col-md-6">
                                    <strong>Account Created:</strong>
                                    <span class="text-muted">@Model.UserStats?.CreatedAt.ToString("MMMM dd, yyyy")</span>
                                </div>
                                <div class="col-md-6">
                                    <strong>Last Login:</strong>
                                    <span class="text-muted">
                                        @if (Model.UserStats?.LastLoginAt.HasValue == true)
                                        {
                                            @Model.UserStats.LastLoginAt.Value.ToString("MMMM dd, yyyy")
                                        }
                                        else
                                        {
                                            <span>Never logged in</span>
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <a asp-page="./Details" asp-route-id="@Model.Input.Id" class="btn btn-outline-info">
                                    <i class="bi bi-eye me-1"></i>View Details
                                </a>
                                <a asp-page="./Index" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-left me-1"></i>Back to Users
                                </a>
                            </div>
                            <div>
                                <button type="button" class="btn btn-outline-warning me-2" onclick="resetForm()">
                                    <i class="bi bi-arrow-clockwise me-1"></i>Reset Changes
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check2 me-1"></i>Save Changes
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
}

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
    
    <script>
        function resetForm() {
            if (confirm("Are you sure you want to reset all changes? This will restore the original values.")) {
                window.location.reload();
            }
        }
        
        // Password validation
        document.querySelector("input[name='Input.NewPassword']").addEventListener("input", function(e) {
            const password = e.target.value;
            const confirmField = document.querySelector("input[name='Input.ConfirmPassword']");
            
            if (password.length > 0 && password.length < 6) {
                e.target.classList.add("is-invalid");
                e.target.classList.remove("is-valid");
            } else if (password.length >= 6) {
                e.target.classList.remove("is-invalid");
                e.target.classList.add("is-valid");
            } else {
                e.target.classList.remove("is-invalid", "is-valid");
            }
            
            // Clear confirm password if main password is cleared
            if (password.length === 0) {
                confirmField.value = "";
                confirmField.classList.remove("is-invalid", "is-valid");
            }
        });
        
        // Confirm password validation
        document.querySelector("input[name='Input.ConfirmPassword']").addEventListener("input", function(e) {
            const confirmPassword = e.target.value;
            const mainPassword = document.querySelector("input[name='Input.NewPassword']").value;
            
            if (confirmPassword.length > 0) {
                if (confirmPassword === mainPassword) {
                    e.target.classList.remove("is-invalid");
                    e.target.classList.add("is-valid");
                } else {
                    e.target.classList.add("is-invalid");
                    e.target.classList.remove("is-valid");
                }
            } else {
                e.target.classList.remove("is-invalid", "is-valid");
            }
        });
        
        // Warn about email changes
        const originalEmail = document.querySelector("input[name='Input.Email']").value;
        document.querySelector("input[name='Input.Email']").addEventListener("change", function(e) {
            if (e.target.value !== originalEmail) {
                if (!document.getElementById("email-warning")) {
                    const warning = document.createElement("div");
                    warning.id = "email-warning";
                    warning.className = "alert alert-warning mt-2";
                    warning.innerHTML = "<i class='bi bi-exclamation-triangle me-2'></i>Changing the email address will require the user to verify their new email.";
                    e.target.parentNode.appendChild(warning);
                }
            } else {
                const warning = document.getElementById("email-warning");
                if (warning) {
                    warning.remove();
                }
            }
        });
    </script>
} 