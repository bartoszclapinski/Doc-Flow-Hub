@page "/Documents/Details/{id:int}"
@using DocFlowHub.Web.Extensions
@model DocFlowHub.Web.Pages.Documents.DetailsModel
@{
    ViewData["Title"] = Model.Document?.Title ?? "Document Details";
}

<div class="container-fluid">
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    
    @if (Model.Document != null)
    {
        <!-- Breadcrumb Navigation with Team Context -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
                @if (Model.Document.TeamId.HasValue && !string.IsNullOrEmpty(Model.Document.TeamName))
                {
                    <li class="breadcrumb-item"><a asp-page="/Teams/Index">Teams</a></li>
                    <li class="breadcrumb-item"><a asp-page="/Teams/Details" asp-route-id="@Model.Document.TeamId">@Model.Document.TeamName</a></li>
                    <li class="breadcrumb-item"><a asp-page="./Index" asp-route-filter-teamid="@Model.Document.TeamId">Team Documents</a></li>
                }
                else
                {
                    <li class="breadcrumb-item"><a asp-page="./Index">Documents</a></li>
                }
                <li class="breadcrumb-item active" aria-current="page">@Model.Document.Title</li>
            </ol>
        </nav>

        <div class="row">
            <!-- Main Document Details -->
            <div class="col-lg-8">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <h1 class="card-title mb-0 h4">
                                <i class="bi bi-file-earmark-text me-2"></i>
                                @Model.Document.Title
                            </h1>
                            <div class="d-flex gap-2">
                                <form method="post" asp-page-handler="Download" asp-route-versionId="@Model.Document.CurrentVersionId" class="d-inline">
                                    <button type="submit" class="btn btn-success btn-sm">
                                        <i class="bi bi-download me-1"></i>Download
                                    </button>
                                </form>
                                @if (Model.Document.OwnerId == User.GetUserId())
                                {
                                    <a asp-page="./Edit" asp-route-id="@Model.Document.Id" class="btn btn-outline-light btn-sm">
                                        <i class="bi bi-pencil me-1"></i>Edit
                                    </a>
                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                            onclick="confirmDeleteDocument(@Model.Document.Id, '@Model.Document.Title.Replace("'", "\\'")', '@FormatFileSize(Model.Document.FileSize)', '@Model.Document.CreatedAt.ToString("MMM dd, yyyy")')">
                                        <i class="bi bi-trash me-1"></i>Delete
                                    </button>
                                }
                                else
                                {
                                    <a asp-page="./Edit" asp-route-id="@Model.Document.Id" class="btn btn-outline-light btn-sm">
                                        <i class="bi bi-pencil me-1"></i>Edit
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.Document.Description))
                        {
                            <div class="mb-4">
                                <h5>Description</h5>
                                <p class="text-muted">@Model.Document.Description</p>
                            </div>
                        }
                        
                        <!-- AI Summary Section -->
                        @if (Model.Document.HasAISummary)
                        {
                            <div class="mb-4">
                                <div class="card border-primary">
                                    <div class="card-header bg-primary text-white">
                                        <h6 class="card-title mb-0">
                                            <i class="bi bi-magic me-2"></i>
                                            AI Summary
                                            <small class="float-end">
                                                Generated by @Model.Document.AISummary!.AIModel
                                                <span class="badge bg-light text-dark ms-2">
                                                    @(Math.Round((Model.Document.AISummary!.ConfidenceScore ?? 0.85) * 100))% confidence
                                                </span>
                                            </small>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">@Model.Document.AISummary!.Summary</p>
                                        
                                        @if (!string.IsNullOrEmpty(Model.Document.AISummary!.KeyPoints))
                                        {
                                            <div class="mt-3">
                                                <h6 class="text-primary">
                                                    <i class="bi bi-key"></i> Key Points
                                                </h6>
                                                <div class="bg-light rounded p-3">
                                                    @{
                                                        var keyPoints = Model.Document.AISummary!.KeyPoints.Split('\n', StringSplitOptions.RemoveEmptyEntries);
                                                    }
                                                    @foreach (var point in keyPoints)
                                                    {
                                                        <div class="d-flex align-items-start mb-2">
                                                            <i class="bi bi-arrow-right text-primary me-2 mt-1"></i>
                                                            <span>@point.Trim().TrimStart('â€¢', '-', '*').Trim()</span>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                        
                                        <div class="mt-3">
                                            <small class="text-muted">
                                                <i class="bi bi-clock"></i>
                                                Generated on @Model.Document.AISummary!.GeneratedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="mb-4">
                                <div class="card border-secondary">
                                    <div class="card-body text-center">
                                        <div class="text-muted">
                                            <i class="bi bi-robot fs-1 d-block mb-2"></i>
                                            <h6>AI Summary</h6>
                                            <p class="small mb-0">
                                                AI summary is being generated in the background. Please refresh the page in a few moments.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        <div class="row">
                            <div class="col-md-6">
                                <dl class="row">
                                    <dt class="col-sm-5">File Type</dt>
                                    <dd class="col-sm-7">
                                        <span class="badge bg-info">@Model.Document.FileType.ToUpper()</span>
                                    </dd>
                                    
                                    <dt class="col-sm-5">File Size</dt>
                                    <dd class="col-sm-7">@FormatFileSize(Model.Document.FileSize)</dd>
                                    
                                    <dt class="col-sm-5">Created</dt>
                                    <dd class="col-sm-7">
                                        <span data-bs-toggle="tooltip" title="@Model.Document.CreatedAt.ToString("F")">
                                            @Model.Document.CreatedAt.ToString("MMM dd, yyyy")
                                        </span>
                                    </dd>
                                </dl>
                            </div>
                            <div class="col-md-6">
                                <dl class="row">
                                    <dt class="col-sm-5">Last Modified</dt>
                                    <dd class="col-sm-7">
                                                                                @if (Model.Document.UpdatedAt.HasValue)
                                        {
                                            <span data-bs-toggle="tooltip" title="@Model.Document.UpdatedAt.Value.ToString("F")">
                                                @Model.Document.UpdatedAt.Value.ToString("MMM dd, yyyy")
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Never</span>
                                        }
                                    </dd>
                                    
                                    <dt class="col-sm-5">Owner</dt>
                                    <dd class="col-sm-7">
                                        <i class="bi bi-person-circle"></i>
                                        @Model.Document.OwnerName
                                    </dd>
                                    
                                    @if (Model.Document.TeamId.HasValue)
                                    {
                                        <dt class="col-sm-5">Team</dt>
                                        <dd class="col-sm-7">
                                            <i class="bi bi-people-fill text-primary"></i>
                                            @if (!string.IsNullOrEmpty(Model.Document.TeamName))
                                            {
                                                <span>@Model.Document.TeamName</span>
                                            }
                                            else
                                            {
                                                <span>Shared with team</span>
                                            }
                                        </dd>
                                    }
                                </dl>
                            </div>
                        </div>

                        @if (Model.Categories.Any())
                        {
                            <div class="mt-3">
                                <h6>Categories:</h6>
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var category in Model.Categories)
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="bi bi-tag-fill"></i>
                                            @category.Name
                                        </span>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Team Sharing Management (Only for document owners) -->
                        @if (Model.Document.OwnerId == User.GetUserId())
                        {
                            <div class="mt-4 pt-3 border-top">
                                <h6>Team Sharing</h6>
                                @if (Model.Document.TeamId.HasValue)
                                {
                                    <div class="alert alert-info d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="bi bi-people-fill me-2"></i>
                                            This document is shared with team: <strong>@Model.Document.TeamName</strong>
                                        </div>
                                        <form method="post" asp-page-handler="UnshareFromTeam" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-outline-warning" 
                                                    onclick="return confirm('Are you sure you want to unshare this document from the team?');">
                                                <i class="bi bi-x-circle me-1"></i>Unshare
                                            </button>
                                        </form>
                                    </div>
                                }
                                else if (Model.UserTeams.Any())
                                {
                                    <div class="alert alert-secondary">
                                        <i class="bi bi-lock me-2"></i>This document is private
                                    </div>
                                    <form method="post" asp-page-handler="ShareWithTeam" class="row g-3">
                                        <div class="col-auto">
                                            <select asp-for="ShareWithTeamId" class="form-select" required>
                                                <option value="">Select team to share with...</option>
                                                @foreach (var team in Model.UserTeams)
                                                {
                                                    <option value="@team.Id">@team.Name (@team.MemberCount members)</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-auto">
                                            <button type="submit" class="btn btn-primary">
                                                <i class="bi bi-share me-1"></i>Share with Team
                                            </button>
                                        </div>
                                    </form>
                                }
                                else
                                {
                                    <div class="alert alert-light">
                                        <i class="bi bi-info-circle me-2"></i>
                                        You don't have any teams to share this document with. 
                                        <a asp-page="/Teams/Create" class="alert-link">Create a team</a> to start collaborating!
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>

                @if (Model.ComparisonResult != null)
                {
                    <!-- AI Version Comparison Results -->
                    <div class="card shadow-sm mt-4">
                        <div class="card-header bg-success text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-magic"></i>
                                    AI Version Comparison
                                </h5>
                                <div class="text-end">
                                    <small>Generated by @Model.ComparisonResult.AIModel</small><br>
                                    <small>Confidence: @(Math.Round((Model.ComparisonResult.ConfidenceScore ?? 0.8) * 100))%</small>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <!-- Change Summary -->
                                    <div class="mb-4">
                                        <h6 class="text-primary">
                                            <i class="bi bi-lightbulb"></i>
                                            Summary of Changes
                                        </h6>
                                        <p class="lead">@Model.ComparisonResult.ChangeSummary</p>
                                    </div>

                                    <!-- Detailed Changes -->
                                    @if (!string.IsNullOrEmpty(Model.ComparisonResult.DetailedChanges))
                                    {
                                        <div class="mb-4">
                                            <h6 class="text-primary">
                                                <i class="bi bi-list-ul"></i>
                                                Detailed Changes
                                            </h6>
                                            <div class="border rounded p-3 bg-light">
                                                @{
                                                    var changes = Model.ComparisonResult.DetailedChanges.Split('\n', StringSplitOptions.RemoveEmptyEntries);
                                                }
                                                @foreach (var change in changes)
                                                {
                                                    <div class="d-flex align-items-start mb-2">
                                                        <i class="bi bi-arrow-right text-muted me-2 mt-1"></i>
                                                        <span>@change.Trim().TrimStart('â€¢', '-', '*').Trim()</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="col-md-4">
                                    <!-- Analysis Metadata -->
                                    <div class="bg-light rounded p-3">
                                        <h6 class="text-muted mb-3">Analysis Details</h6>
                                        
                                        <div class="mb-3">
                                            <label class="small text-muted">Change Type:</label>
                                            <div>
                                                @{
                                                    var changeTypeClass = Model.ComparisonResult.ChangeType switch
                                                    {
                                                        DocFlowHub.Core.Models.AI.ChangeType.ContentAddition => "bg-success",
                                                        DocFlowHub.Core.Models.AI.ChangeType.ContentDeletion => "bg-danger",
                                                        DocFlowHub.Core.Models.AI.ChangeType.ContentModification => "bg-warning",
                                                        DocFlowHub.Core.Models.AI.ChangeType.StructuralChange => "bg-info",
                                                        DocFlowHub.Core.Models.AI.ChangeType.SemanticChange => "bg-primary",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @changeTypeClass">@Model.ComparisonResult.ChangeType</span>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="small text-muted">Significance:</label>
                                            <div>
                                                @{
                                                    var significanceClass = Model.ComparisonResult.Significance switch
                                                    {
                                                        DocFlowHub.Core.Models.AI.ChangeSignificance.Critical => "bg-danger",
                                                        DocFlowHub.Core.Models.AI.ChangeSignificance.High => "bg-warning",
                                                        DocFlowHub.Core.Models.AI.ChangeSignificance.Medium => "bg-info",
                                                        _ => "bg-success"
                                                    };
                                                }
                                                <span class="badge @significanceClass">@Model.ComparisonResult.Significance</span>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label class="small text-muted">Processing Time:</label>
                                            <div class="small">@Model.ComparisonResult.ProcessingTimeMs ms</div>
                                        </div>

                                        @if (Model.ComparisonResult.TokensUsed > 0)
                                        {
                                            <div class="mb-3">
                                                <label class="small text-muted">AI Tokens Used:</label>
                                                <div class="small">@Model.ComparisonResult.TokensUsed tokens</div>
                                            </div>
                                        }

                                        <div>
                                            <label class="small text-muted">Generated:</label>
                                            <div class="small">@Model.ComparisonResult.GeneratedAt.ToString("MMM dd, yyyy HH:mm")</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            
            <!-- Version History Sidebar -->
            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-clock-history"></i>
                            Version History
                        </h5>
                        @if (Model.Versions.Items.Count() >= 2)
                        {
                            <small class="text-muted">Select versions to compare with AI analysis</small>
                        }
                    </div>
                    <div class="card-body p-0">
                        @if (Model.Versions.Items.Any())
                        {
                            @if (Model.Versions.Items.Count() >= 2)
                            {
                                <!-- Version Comparison Form -->
                                <div class="p-3 border-bottom bg-light">
                                    <form method="post" asp-page-handler="CompareVersions">
                                        <div class="row g-2">
                                            <div class="col-6">
                                                <label class="form-label small">From Version:</label>
                                                <select asp-for="FromVersionNumber" class="form-select form-select-sm" required>
                                                    <option value="">Select...</option>
                                                    @foreach (var version in Model.Versions.Items)
                                                    {
                                                        <option value="@version.VersionNumber">v@(version.VersionNumber)</option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-6">
                                                <label class="form-label small">To Version:</label>
                                                <select asp-for="ToVersionNumber" class="form-select form-select-sm" required>
                                                    <option value="">Select...</option>
                                                    @foreach (var version in Model.Versions.Items)
                                                    {
                                                        <option value="@version.VersionNumber">v@(version.VersionNumber)</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                        
                                        <!-- AI Model & Settings Selection -->
                                        <div class="mt-2">
                                            <div class="row g-2">
                                                <div class="col-8">
                                                    <label class="form-label small">AI Model:</label>
                                                    <select asp-for="ComparisonAIModel" class="form-select form-select-sm" id="comparisonModel">
                                                        <option value="">Default (@(Model.GetPreferredModelDisplay()))</option>
                                                        @foreach (var aiModel in Model.AvailableAIModels)
                                                        {
                                                            <option value="@aiModel.ApiString">@aiModel.DisplayName</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-4">
                                                    <label class="form-label small">Quality:</label>
                                                    <select asp-for="ComparisonQuality" class="form-select form-select-sm" id="comparisonQuality">
                                                        <option value="">Default</option>
                                                        <option value="fast">Fast</option>
                                                        <option value="balanced">Balanced</option>
                                                        <option value="detailed">Detailed</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="mt-1">
                                                <small class="text-muted d-flex justify-content-between">
                                                    <span id="modelDescription">Choose AI model and analysis quality</span>
                                                    <span id="estimatedCost" class="text-success">Cost: ~$0.01</span>
                                                </small>
                                            </div>
                                        </div>
                                        
                                        <div class="mt-2">
                                            <button type="submit" class="btn btn-primary btn-sm w-100" @(Model.IsComparing ? "disabled" : "")>
                                                @if (Model.IsComparing)
                                                {
                                                    <i class="bi bi-hourglass-split spin"></i>
                                                    <span>Analyzing...</span>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-magic"></i>
                                                    <span>Compare with AI</span>
                                                }
                                            </button>
                                        </div>
                                        
                                        <!-- AI Settings Quick Link -->
                                        <div class="mt-2 text-center">
                                            <a asp-page="/Settings/AI" class="small text-decoration-none">
                                                <i class="bi bi-gear-fill me-1"></i>Configure AI Settings
                                            </a>
                                        </div>
                                    </form>
                                </div>
                            }
                            <div class="list-group list-group-flush">
                                @foreach (var version in Model.Versions.Items)
                                {
                                    <div class="list-group-item @(version.Id == Model.Document.CurrentVersionId ? "list-group-item-primary" : "")">
                                        <div class="d-flex w-100 justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1">
                                                    Version @version.VersionNumber
                                                    @if (version.Id == Model.Document.CurrentVersionId)
                                                    {
                                                        <span class="badge bg-success ms-1">Current</span>
                                                    }
                                                </h6>
                                                <p class="mb-1 small text-muted">
                                                    <i class="bi bi-calendar3"></i>
                                                    @version.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                                </p>
                                                @if (!string.IsNullOrEmpty(version.UserName))
                                                {
                                                    <p class="mb-1 small text-muted">
                                                        <i class="bi bi-person"></i>
                                                        @version.UserName
                                                    </p>
                                                }
                                                @if (!string.IsNullOrEmpty(version.ChangeSummary))
                                                {
                                                    <p class="mb-1 small">@version.ChangeSummary</p>
                                                }
                                                <small class="text-muted">@FormatFileSize(version.FileSize)</small>
                                            </div>
                                            <div class="ms-2 d-flex gap-1">
                                                <form method="post" asp-page-handler="Download" asp-route-versionId="@version.Id" class="d-inline download-form">
                                                    <button type="submit" class="btn btn-outline-primary btn-sm" title="Download this version">
                                                        <i class="bi bi-download"></i>
                                                    </button>
                                                </form>
                                                @if (Model.Document.OwnerId == User.GetUserId() && version.Id != Model.Document.CurrentVersionId && Model.Versions.Items.Count() > 1)
                                                {
                                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                                            title="Delete this version"
                                                            onclick="confirmDeleteVersion(@version.Id, '@version.VersionNumber', '@FormatFileSize(version.FileSize)', '@version.CreatedAt.ToString("MMM dd, yyyy")')">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            
                            @if (Model.Versions.TotalPages > 1)
                            {
                                <div class="card-footer">
                                    <nav aria-label="Version history pagination">
                                        <ul class="pagination pagination-sm justify-content-center mb-0">
                                            @if (Model.Versions.PageNumber > 1)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" asp-route-id="@Model.Id" asp-route-pageNumber="@(Model.Versions.PageNumber - 1)">
                                                        <i class="bi bi-chevron-left"></i>
                                                    </a>
                                                </li>
                                            }
                                            
                                            @for (int i = Math.Max(1, Model.Versions.PageNumber - 2); i <= Math.Min(Model.Versions.TotalPages, Model.Versions.PageNumber + 2); i++)
                                            {
                                                <li class="page-item @(i == Model.Versions.PageNumber ? "active" : "")">
                                                    <a class="page-link" asp-route-id="@Model.Id" asp-route-pageNumber="@i">@i</a>
                                                </li>
                                            }
                                            
                                            @if (Model.Versions.PageNumber < Model.Versions.TotalPages)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" asp-route-id="@Model.Id" asp-route-pageNumber="@(Model.Versions.PageNumber + 1)">
                                                        <i class="bi bi-chevron-right"></i>
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </nav>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="p-3 text-center text-muted">
                                <i class="bi bi-info-circle"></i>
                                No version history available
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <h3>Document not found</h3>
            <p class="text-muted">The requested document could not be found or you don't have permission to view it.</p>
            <a asp-page="./Index" class="btn btn-primary">
                <i class="bi bi-arrow-left"></i> Back to Documents
            </a>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title text-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    Confirm Document Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <i class="bi bi-warning me-2"></i>
                    <strong>This action cannot be undone!</strong>
                </div>
                
                <p>Are you sure you want to delete this document?</p>
                
                <div class="card bg-light">
                    <div class="card-body">
                        <h6 class="card-title mb-2" id="deleteDocumentTitle"></h6>
                        <div class="row text-muted small">
                            <div class="col-6">
                                <strong>Size:</strong> <span id="deleteDocumentSize"></span>
                            </div>
                            <div class="col-6">
                                <strong>Created:</strong> <span id="deleteDocumentDate"></span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <p class="text-muted small mt-3">This will:</p>
                <ul class="text-muted small">
                    <li>Move the document to deleted items (soft delete)</li>
                    <li>Remove the document from team sharing</li>
                    <li>Preserve all version history</li>
                    <li>Allow restoration by admins if needed</li>
                </ul>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg me-1"></i>Cancel
                </button>
                <form method="post" asp-page-handler="Delete" class="d-inline" id="deleteForm">
                    <input type="hidden" id="deleteDocumentId" name="documentId" value="@Model.Document.Id" />
                    <button type="submit" class="btn btn-danger loading-btn">
                        <span class="spinner-border spinner-border-sm d-none me-2" role="status"></span>
                        <i class="bi bi-trash me-1"></i>
                        <span class="btn-text">Delete Document</span>
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Version Delete Confirmation Modal -->
<div class="modal fade" id="deleteVersionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title text-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    Confirm Version Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="bi bi-warning me-2"></i>
                    <strong>This action cannot be undone!</strong>
                </div>
                
                <p>Are you sure you want to delete this document version?</p>
                
                <div class="card bg-light">
                    <div class="card-body">
                        <h6 class="card-title mb-2">Version <span id="deleteVersionNumber"></span></h6>
                        <div class="row text-muted small">
                            <div class="col-6">
                                <strong>Size:</strong> <span id="deleteVersionSize"></span>
                            </div>
                            <div class="col-6">
                                <strong>Created:</strong> <span id="deleteVersionDate"></span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <p class="text-muted small mt-3">This will:</p>
                <ul class="text-muted small">
                    <li>Permanently delete this version</li>
                    <li>Remove the version from history</li>
                    <li>Cannot be restored once deleted</li>
                    <li>Current version will remain unaffected</li>
                </ul>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg me-1"></i>Cancel
                </button>
                <form method="post" asp-page-handler="DeleteVersion" class="d-inline" id="deleteVersionForm">
                    <input type="hidden" id="deleteVersionId" name="versionId" />
                    <button type="submit" class="btn btn-warning loading-btn">
                        <span class="spinner-border spinner-border-sm d-none me-2" role="status"></span>
                        <i class="bi bi-trash me-1"></i>
                        <span class="btn-text">Delete Version</span>
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private static string FormatFileSize(long bytes)
    {
        string[] suffixes = { "B", "KB", "MB", "GB", "TB" };
        int counter = 0;
        decimal number = bytes;
        while (Math.Round(number / 1024) >= 1)
        {
            number /= 1024;
            counter++;
        }
        return $"{number:n1} {suffixes[counter]}";
    }
}

@section Scripts {
    <script>
        // Confirm delete document function
        function confirmDeleteDocument(documentId, title, size, createdDate) {
            // Populate modal with document details
            document.getElementById('deleteDocumentId').value = documentId;
            document.getElementById('deleteDocumentTitle').textContent = title;
            document.getElementById('deleteDocumentSize').textContent = size;
            document.getElementById('deleteDocumentDate').textContent = createdDate;
            
            // Show the modal
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // Confirm delete version function
        function confirmDeleteVersion(versionId, versionNumber, size, createdDate) {
            // Populate modal with version details
            document.getElementById('deleteVersionId').value = versionId;
            document.getElementById('deleteVersionNumber').textContent = versionNumber;
            document.getElementById('deleteVersionSize').textContent = size;
            document.getElementById('deleteVersionDate').textContent = createdDate;
            
            // Show the modal
            const deleteVersionModal = new bootstrap.Modal(document.getElementById('deleteVersionModal'));
            deleteVersionModal.show();
        }

        // Initialize Bootstrap tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Delete form loading state
        const deleteForm = document.getElementById('deleteForm');
        if (deleteForm) {
            deleteForm.addEventListener('submit', function() {
                const loadingBtn = deleteForm.querySelector('.loading-btn');
                if (loadingBtn) {
                    const spinner = loadingBtn.querySelector('.spinner-border');
                    const btnText = loadingBtn.querySelector('.btn-text');
                    const icon = loadingBtn.querySelector('.bi');
                    
                    spinner.classList.remove('d-none');
                    if (icon) icon.classList.add('d-none');
                    if (btnText) btnText.textContent = 'Deleting...';
                    loadingBtn.disabled = true;
                }
            });
        }

        // Delete version form loading state
        const deleteVersionForm = document.getElementById('deleteVersionForm');
        if (deleteVersionForm) {
            deleteVersionForm.addEventListener('submit', function() {
                const loadingBtn = deleteVersionForm.querySelector('.loading-btn');
                if (loadingBtn) {
                    const spinner = loadingBtn.querySelector('.spinner-border');
                    const btnText = loadingBtn.querySelector('.btn-text');
                    const icon = loadingBtn.querySelector('.bi');
                    
                    spinner.classList.remove('d-none');
                    if (icon) icon.classList.add('d-none');
                    if (btnText) btnText.textContent = 'Deleting...';
                    loadingBtn.disabled = true;
                }
            });
        }

        // Add loading state to download buttons
        document.querySelectorAll('.download-form button').forEach(function(button) {
            button.addEventListener('click', function() {
                const icon = this.querySelector('i');
                const originalText = this.innerHTML;
                
                // Show loading state
                this.disabled = true;
                icon.className = 'bi bi-download spin';
                
                // Reset after a delay (file download should trigger)
                setTimeout(() => {
                    this.disabled = false;
                    this.innerHTML = originalText;
                }, 3000);
            });
        });

        // AI Model Selection Interactive Features
        function initializeAIModelSelection() {
            const modelSelect = document.getElementById('comparisonModel');
            const qualitySelect = document.getElementById('comparisonQuality');
            const descriptionSpan = document.getElementById('modelDescription');
            const costSpan = document.getElementById('estimatedCost');

            if (!modelSelect || !qualitySelect) return;

            function updateModelInfo() {
                const selectedModel = modelSelect.value || 'gpt-4o-mini';
                const selectedQuality = qualitySelect.value || 'balanced';

                // Update description
                const descriptions = {
                    'gpt-4.1': 'Most capable model - highest quality analysis',
                    'gpt-4.1-mini': 'Fast & efficient - high quality with good speed',
                    'gpt-4o': 'Advanced model - good balance of quality and cost',
                    'gpt-4o-mini': 'Cost effective - good quality, lowest cost'
                };

                const description = descriptions[selectedModel] || 'AI-powered version comparison';
                descriptionSpan.textContent = description;

                // Update cost estimate (simplified calculation)
                const baseCosts = {
                    'gpt-4.1': 0.020,
                    'gpt-4.1-mini': 0.008,
                    'gpt-4o': 0.015,
                    'gpt-4o-mini': 0.005
                };

                const qualityMultipliers = {
                    'fast': 0.7,
                    'balanced': 1.0,
                    'detailed': 1.5
                };

                const baseCost = baseCosts[selectedModel] || 0.005;
                const multiplier = qualityMultipliers[selectedQuality] || 1.0;
                const estimatedCost = (baseCost * multiplier).toFixed(3);

                costSpan.textContent = `Cost: ~$${estimatedCost}`;
                costSpan.className = estimatedCost > 0.015 ? 'text-warning' : 'text-success';
            }

            // Add event listeners
            modelSelect.addEventListener('change', updateModelInfo);
            qualitySelect.addEventListener('change', updateModelInfo);

            // Initialize on page load
            updateModelInfo();
        }

        // Initialize AI features when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            initializeAIModelSelection();
        });
    </script>
    
    <style>
        .spin {
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        .list-group-item-primary {
            background-color: rgba(13, 110, 253, 0.1);
            border-color: rgba(13, 110, 253, 0.2);
        }
    </style>
} 