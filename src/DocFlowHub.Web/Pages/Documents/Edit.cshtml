@page "/Documents/Edit/{id:int}"
@model DocFlowHub.Web.Pages.Documents.EditModel
@{
    ViewData["Title"] = $"Edit - {Model.Document?.Title ?? "Document"}";
}

<div class="container-fluid">
    <!-- Breadcrumb Navigation -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-page="./Index">Documents</a></li>
            @if (Model.Document != null)
            {
                <li class="breadcrumb-item"><a asp-page="./Details" asp-route-id="@Model.Document.Id">@Model.Document.Title</a></li>
            }
            <li class="breadcrumb-item active" aria-current="page">Edit</li>
        </ol>
    </nav>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i>
            @Model.ErrorMessage
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success" role="alert">
            <i class="bi bi-check-circle-fill"></i>
            @Model.SuccessMessage
        </div>
    }

    @if (Model.Document != null)
    {
        <div class="row">
            <!-- Document Metadata Edit -->
            <div class="col-lg-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h4 class="card-title mb-0">
                            <i class="bi bi-pencil-square"></i>
                            Edit Document Information
                        </h4>
                    </div>
                    <div class="card-body">
                        <form method="post" asp-page-handler="UpdateMetadata">
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label asp-for="Title" class="form-label">Title *</label>
                                        <input asp-for="Title" class="form-control" placeholder="Enter document title">
                                        <span asp-validation-for="Title" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Description" class="form-label">Description</label>
                                        <textarea asp-for="Description" class="form-control" rows="4" 
                                                  placeholder="Enter document description"></textarea>
                                        <span asp-validation-for="Description" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Current File Info</label>
                                        <div class="card">
                                            <div class="card-body p-3">
                                                <p class="mb-1">
                                                    <strong>Type:</strong> 
                                                    <span class="badge bg-info">@Model.Document.FileType.ToUpper()</span>
                                                </p>
                                                <p class="mb-1">
                                                    <strong>Size:</strong> @FormatFileSize(Model.Document.FileSize)
                                                </p>
                                                <p class="mb-0">
                                                    <strong>Modified:</strong> @Model.Document.UpdatedAt.ToString("MMM dd, yyyy")
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Categories</label>
                                <div class="row">
                                    @foreach (var category in Model.AvailableCategories.Where(c => c.ParentId == null))
                                    {
                                        <div class="col-md-6 mb-2">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="SelectedCategoryIds" value="@category.Id"
                                                       checked="@Model.SelectedCategoryIds.Contains(category.Id)"
                                                       id="category_@category.Id">
                                                <label class="form-check-label fw-bold" for="category_@category.Id">
                                                    @category.Name
                                                </label>
                                            </div>
                                            @foreach (var subcategory in Model.AvailableCategories.Where(c => c.ParentId == category.Id))
                                            {
                                                <div class="form-check ms-3">
                                                    <input class="form-check-input" type="checkbox" 
                                                           name="SelectedCategoryIds" value="@subcategory.Id"
                                                           checked="@Model.SelectedCategoryIds.Contains(subcategory.Id)"
                                                           id="category_@subcategory.Id">
                                                    <label class="form-check-label" for="category_@subcategory.Id">
                                                        @subcategory.Name
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <div>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-check-lg"></i> Update Information
                                    </button>
                                    <a asp-page="./Details" asp-route-id="@Model.Document.Id" class="btn btn-secondary">
                                        <i class="bi bi-arrow-left"></i> Back to Details
                                    </a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Upload New Version -->
                <div class="card shadow-sm">
                    <div class="card-header bg-success text-white">
                        <h4 class="card-title mb-0">
                            <i class="bi bi-cloud-upload"></i>
                            Upload New Version
                        </h4>
                    </div>
                    <div class="card-body">
                        <form method="post" asp-page-handler="UploadNewVersion" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label asp-for="NewVersionFile" class="form-label">Select New File *</label>
                                <input asp-for="NewVersionFile" class="form-control" type="file" 
                                       accept=".pdf,.doc,.docx,.txt,.md,.jpg,.jpeg,.png,.gif">
                                <div class="form-text">
                                    Supported formats: PDF, DOC, DOCX, TXT, MD, JPG, PNG, GIF (max 30MB)
                                </div>
                                <span asp-validation-for="NewVersionFile" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="ChangeSummary" class="form-label">Change Summary</label>
                                <textarea asp-for="ChangeSummary" class="form-control" rows="3" 
                                          placeholder="Describe what changed in this version..."></textarea>
                                <span asp-validation-for="ChangeSummary" class="text-danger"></span>
                            </div>

                            <div class="d-flex justify-content-between">
                                <button type="submit" class="btn btn-success">
                                    <i class="bi bi-upload"></i> Upload New Version
                                </button>
                                <small class="text-muted align-self-center">
                                    This will create a new version while keeping the old one
                                </small>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Sidebar with Current Categories and Version Info -->
            <div class="col-lg-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-tags"></i>
                            Current Categories
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.CurrentCategories.Any())
                        {
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var category in Model.CurrentCategories)
                                {
                                    <span class="badge bg-secondary">
                                        <i class="bi bi-tag-fill"></i>
                                        @category.Name
                                    </span>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted mb-0">No categories assigned</p>
                        }
                    </div>
                </div>

                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle"></i>
                            Document Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-5">Created</dt>
                            <dd class="col-sm-7">@Model.Document.CreatedAt.ToString("MMM dd, yyyy")</dd>
                            
                            <dt class="col-sm-5">Owner</dt>
                            <dd class="col-sm-7">
                                <i class="bi bi-person-circle"></i>
                                @Model.Document.OwnerName
                            </dd>
                            
                            @if (Model.Document.TeamId.HasValue)
                            {
                                <dt class="col-sm-5">Team</dt>
                                <dd class="col-sm-7">
                                    <i class="bi bi-people-fill text-primary"></i>
                                    Shared
                                </dd>
                            }
                        </dl>

                        <div class="mt-3">
                            <a asp-page="./Details" asp-route-id="@Model.Document.Id" class="btn btn-outline-primary btn-sm w-100">
                                <i class="bi bi-eye"></i> View Details & History
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <h3>Document not found</h3>
            <p class="text-muted">The requested document could not be found or you don't have permission to edit it.</p>
            <a asp-page="./Index" class="btn btn-primary">
                <i class="bi bi-arrow-left"></i> Back to Documents
            </a>
        </div>
    }
</div>

@functions {
    private static string FormatFileSize(long bytes)
    {
        string[] suffixes = { "B", "KB", "MB", "GB", "TB" };
        int counter = 0;
        decimal number = bytes;
        while (Math.Round(number / 1024) >= 1)
        {
            number /= 1024;
            counter++;
        }
        return $"{number:n1} {suffixes[counter]}";
    }
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // File upload validation
        document.querySelector('input[type="file"]').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const maxSize = 30 * 1024 * 1024; // 30MB
                const allowedTypes = ['.pdf', '.doc', '.docx', '.txt', '.md', '.jpg', '.jpeg', '.png', '.gif'];
                
                if (file.size > maxSize) {
                    alert('File size must be less than 30MB');
                    e.target.value = '';
                    return;
                }
                
                const extension = '.' + file.name.split('.').pop().toLowerCase();
                if (!allowedTypes.includes(extension)) {
                    alert('File type not supported. Please select a PDF, DOC, DOCX, TXT, MD, JPG, PNG, or GIF file.');
                    e.target.value = '';
                    return;
                }
            }
        });

        // Auto-hide success messages
        setTimeout(function() {
            const successAlert = document.querySelector('.alert-success');
            if (successAlert) {
                successAlert.style.transition = 'opacity 0.5s';
                successAlert.style.opacity = '0';
                setTimeout(() => successAlert.remove(), 500);
            }
        }, 5000);

        // Confirm new version upload
        document.querySelector('form[asp-page-handler="UploadNewVersion"]').addEventListener('submit', function(e) {
            const fileInput = document.querySelector('input[type="file"]');
            if (fileInput.files.length > 0) {
                if (!confirm('Are you sure you want to upload a new version? This will create a new version of the document.')) {
                    e.preventDefault();
                }
            }
        });
    </script>
} 