@page
@model DocFlowHub.Web.Pages.Account.Manage.UploadProfilePictureModel
@{
    ViewData["Title"] = "Profile Picture";
    ViewData["ActivePage"] = "UploadProfilePicture";
}

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <partial name="_ManageNav" />
        </div>
        <div class="col-md-9">
            <div class="card">
                <div class="card-header">
                    <h4>@ViewData["Title"]</h4>
                </div>
                <div class="card-body">
                    @if (TempData["StatusMessage"] != null)
                    {
                        <div class="alert @(TempData["StatusMessage"]?.ToString()?.Contains("error", StringComparison.OrdinalIgnoreCase) == true ? "alert-danger" : "alert-success") alert-dismissible fade show" role="alert">
                            @TempData["StatusMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    
                    <form method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Input.ProfilePicture" class="form-label">Upload New Picture</label>
                                    <input asp-for="Input.ProfilePicture" class="form-control" type="file" accept="image/jpeg,image/png,image/gif" />
                                    <span asp-validation-for="Input.ProfilePicture" class="text-danger"></span>
                                    <div class="form-text">Maximum file size: 5MB. Supported formats: JPG, PNG, GIF.</div>
                                </div>

                                <div class="mt-4">
                                    <button type="submit" class="btn btn-primary">Upload Picture</button>
                                    <a asp-page="./Index" class="btn btn-outline-secondary">Cancel</a>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="text-center">
                                    <h5>Current Picture</h5>
                                    <div class="profile-picture-container">
                                        @if (!string.IsNullOrEmpty(Model.CurrentPictureUrl))
                                        {
                                            <img src="@Model.CurrentPictureUrl" alt="Current Profile Picture" class="img-fluid rounded-circle mb-3 profile-picture" />
                                        }
                                        else
                                        {
                                            <img src="~/images/default-profile.svg" alt="Default Profile Picture" class="img-fluid rounded-circle mb-3 profile-picture" />
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Preview the selected image before upload
        document.querySelector('input[type="file"]').addEventListener('change', function(e) {
            if (e.target.files && e.target.files[0]) {
                const file = e.target.files[0];
                
                // Validate file type
                const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];
                if (!allowedTypes.includes(file.type)) {
                    alert('Please select a valid image file (JPG, PNG, or GIF).');
                    this.value = '';
                    return;
                }
                
                // Validate file size (5MB)
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size must be less than 5MB.');
                    this.value = '';
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    const profilePicture = document.querySelector('.profile-picture');
                    profilePicture.src = e.target.result;
                }
                reader.readAsDataURL(file);
            }
        });
    </script>
    <style>
        .profile-picture-container {
            width: 200px;
            height: 200px;
            margin: 0 auto;
            overflow: hidden;
            border-radius: 50%;
            border: 2px solid #dee2e6;
        }
        
        .profile-picture {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
} 