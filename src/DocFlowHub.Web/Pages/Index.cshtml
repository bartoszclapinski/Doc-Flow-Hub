@page
@using DocFlowHub.Web.Pages
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid py-4 page-transition">
    <!-- Welcome Section -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 mb-0">
                <i class="bi bi-house-door me-2 text-primary"></i>
                Welcome, @Model.UserName!
            </h1>
            <p class="text-muted">Here's what's happening with your documents today.</p>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm bg-primary text-white">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="card-title mb-1">Ready to get started?</h5>
                            <p class="card-text mb-0">Upload documents, manage teams, and collaborate with others</p>
                        </div>
                        <div class="col-md-6">
                            <div class="row g-2">
                                <div class="col-lg-6">
                                    <a asp-page="/Documents/Upload" class="btn btn-light w-100">
                                <i class="bi bi-cloud-upload me-1"></i> Upload Document
                            </a>
                                </div>
                                <div class="col-lg-6">
                                    <a asp-page="/Documents/Index" class="btn btn-outline-light w-100">
                                <i class="bi bi-folder me-1"></i> Browse Documents
                            </a>
                                </div>
                                <div class="col-lg-6">
                                    <a asp-page="/Teams/Create" class="btn btn-light w-100">
                                        <i class="bi bi-people me-1"></i> Create Team
                                    </a>
                                </div>
                                <div class="col-lg-6">
                                    <a asp-page="/Teams/Index" class="btn btn-outline-light w-100">
                                        <i class="bi bi-people-fill me-1"></i> Manage Teams
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm h-100 card-stats">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="icon-container bg-primary-subtle text-primary">
                                <i class="bi bi-file-earmark-text fs-1"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="card-title mb-0 text-muted">Total Documents</h6>
                            <h2 class="mt-2 mb-0 counter" data-target="@Model.TotalDocuments">0</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm h-100 card-stats">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="icon-container bg-success-subtle text-success">
                                <i class="bi bi-people fs-1"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="card-title mb-0 text-muted">Teams</h6>
                            <h2 class="mt-2 mb-0 counter" data-target="@Model.TotalTeams">0</h2>
                            <div class="mt-1">
                                <small class="text-success">
                                    <i class="bi bi-star-fill me-1"></i>@Model.TeamsAsOwner owner
                                </small>
                                <small class="text-info ms-2">
                                    <i class="bi bi-person-check me-1"></i>@Model.TeamsAsMember member
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm h-100 card-stats">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="icon-container bg-warning-subtle text-warning">
                                <i class="bi bi-clock-history fs-1"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="card-title mb-0 text-muted">Recent Updates</h6>
                            <h2 class="mt-2 mb-0 counter" data-target="@Model.RecentUpdates">0</h2>
                            <small class="text-muted">Last 7 days</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card border-0 shadow-sm h-100 card-stats">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="icon-container bg-info-subtle text-info">
                                <i class="bi bi-share fs-1"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="card-title mb-0 text-muted">Shared With Me</h6>
                            <h2 class="mt-2 mb-0 counter" data-target="@Model.SharedDocuments">0</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Documents, Teams, and Activity -->
    <div class="row">
        <!-- Recent Documents -->
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-transparent border-0 pb-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-file-earmark-text me-2 text-primary"></i>
                            Recent Documents
                        </h5>
                        <a asp-page="/Documents/Index" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-eye me-1"></i> View All
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.RecentDocuments.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var doc in Model.RecentDocuments.Take(3))
                            {
                                <a asp-page="/Documents/Details" asp-route-id="@doc.Id" class="list-group-item list-group-item-action border-0 document-item">
                                    <div class="d-flex align-items-start">
                                        <div class="flex-shrink-0 me-2">
                                            <i class="bi @GetFileIcon(doc.FileType) text-muted"></i>
                                            </div>
                                        <div class="flex-grow-1 min-w-0">
                                            <h6 class="mb-1 text-truncate">@doc.Title</h6>
                                            <p class="mb-1 text-muted small text-truncate">@doc.Description</p>
                                            <small class="text-muted">
                                                @doc.LastModified.ToString("MMM dd, yyyy")
                                            </small>
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <div class="empty-state">
                                <i class="bi bi-file-earmark-text text-muted fs-2 mb-2"></i>
                                <h6 class="text-muted">No documents yet</h6>
                                <p class="text-muted small mb-3">Start by uploading your first document</p>
                                <a asp-page="/Documents/Upload" class="btn btn-sm btn-primary">
                                    <i class="bi bi-cloud-upload me-1"></i> Upload Document
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Recent Teams -->
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-transparent border-0 pb-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-people me-2 text-success"></i>
                            Recent Teams
                        </h5>
                        <a asp-page="/Teams/Index" class="btn btn-sm btn-outline-success">
                            <i class="bi bi-eye me-1"></i> View All
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.RecentTeams.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var team in Model.RecentTeams.Take(3))
                            {
                                <a asp-page="/Teams/Details" asp-route-id="@team.Id" class="list-group-item list-group-item-action border-0 team-item">
                                    <div class="d-flex align-items-start">
                                        <div class="flex-shrink-0 me-2">
                                            <i class="bi @(team.IsOwner ? "bi-star-fill text-warning" : "bi-people text-success")"></i>
                                        </div>
                                        <div class="flex-grow-1 min-w-0">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <h6 class="mb-1 text-truncate">@team.Name</h6>
                                                <span class="badge bg-secondary-subtle text-secondary small">@team.MemberCount</span>
                                            </div>
                                            <p class="mb-1 text-muted small text-truncate">@team.Description</p>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-muted">
                                                    @team.LastModified.ToString("MMM dd, yyyy")
                                                </small>
                                                <small class="badge @(team.IsOwner ? "bg-warning-subtle text-warning" : "bg-info-subtle text-info")">
                                                    @(team.IsOwner ? "Owner" : "Member")
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <div class="empty-state">
                                <i class="bi bi-people text-muted fs-2 mb-2"></i>
                                <h6 class="text-muted">No teams yet</h6>
                                <p class="text-muted small mb-3">Create or join a team to collaborate</p>
                                <a asp-page="/Teams/Create" class="btn btn-sm btn-success">
                                    <i class="bi bi-plus-circle me-1"></i> Create Team
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-transparent border-0 pb-0">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-activity me-2 text-info"></i>
                        Recent Activity
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentActivities.Any())
                    {
                        <div class="timeline">
                            @foreach (var activity in Model.RecentActivities.Take(4))
                            {
                                <div class="timeline-item">
                                    <div class="timeline-marker @GetActivityMarkerClass(activity.Title)"></div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1 small">@activity.Title</h6>
                                        <p class="mb-1 text-muted small text-truncate">@activity.Description</p>
                                            <small class="text-muted">@GetRelativeTime(activity.Timestamp)</small>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <div class="empty-state">
                                <i class="bi bi-activity text-muted fs-2 mb-2"></i>
                                <h6 class="text-muted">No recent activity</h6>
                                <p class="text-muted small mb-0">Activity will appear here as you work</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetFileIcon(string fileType)
    {
        return fileType.ToLower() switch
        {
            ".pdf" => "bi-file-earmark-pdf",
            ".doc" or ".docx" => "bi-file-earmark-word",
            ".txt" => "bi-file-earmark-text",
            ".md" => "bi-markdown",
            ".jpg" or ".jpeg" or ".png" or ".gif" => "bi-file-earmark-image",
            _ => "bi-file-earmark"
        };
    }

    private string FormatFileSize(long bytes)
    {
        string[] suffixes = { "B", "KB", "MB", "GB", "TB" };
        int counter = 0;
        decimal number = bytes;
        while (Math.Round(number / 1024) >= 1)
        {
            number /= 1024;
            counter++;
        }
        return $"{number:n1} {suffixes[counter]}";
    }

    private string GetActivityMarkerClass(string activityTitle)
    {
        return activityTitle switch
        {
            "Document Created" => "bg-success",
            "Document Updated" => "bg-primary",
            "New Version Uploaded" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    private string GetRelativeTime(DateTime timestamp)
    {
        var timeSpan = DateTime.Now - timestamp;
        
        if (timeSpan.TotalMinutes < 1)
            return "Just now";
        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes}m ago";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours}h ago";
        if (timeSpan.TotalDays < 7)
            return $"{(int)timeSpan.TotalDays}d ago";
        
        return timestamp.ToString("MMM dd");
    }
}

@section Styles {
    <style>
        .card-stats {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .card-stats:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }
        
        .icon-container {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .timeline {
            position: relative;
            padding-left: 30px;
        }
        
        .timeline-item {
            position: relative;
            padding-bottom: 1.5rem;
        }
        
        .timeline-marker {
            position: absolute;
            left: -30px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #0d6efd;
            border: 3px solid #fff;
            box-shadow: 0 0 0 2px #e9ecef;
        }
        
        .timeline-item:not(:last-child)::before {
            content: '';
            position: absolute;
            left: -24px;
            top: 15px;
            height: calc(100% - 15px);
            width: 2px;
            background: #e9ecef;
        }
        
        .document-item {
            transition: all 0.2s ease;
            border-radius: 8px;
            margin-bottom: 0.5rem;
        }
        
        .document-item:hover {
            background-color: rgba(13, 110, 253, 0.05);
            transform: translateX(4px);
        }
        
        .team-item {
            transition: all 0.2s ease;
            border-radius: 8px;
            margin-bottom: 0.5rem;
        }
        
        .team-item:hover {
            background-color: rgba(25, 135, 84, 0.05);
            transform: translateX(4px);
        }
        
        .empty-state {
            opacity: 0.8;
        }
        
        .counter {
            font-weight: 700;
        }
        
        /* Animation for counter */
        @@keyframes countUp {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .counter {
            animation: countUp 0.6s ease-out;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate counters
            const counters = document.querySelectorAll('.counter');
            
            counters.forEach(counter => {
                const target = parseInt(counter.getAttribute('data-target'));
                let current = 0;
                const increment = target / 20; // 20 steps
                const duration = 1000; // 1 second
                const stepTime = duration / 20;
                
                const timer = setInterval(() => {
                    current += increment;
                    if (current >= target) {
                        current = target;
                        clearInterval(timer);
                    }
                    counter.textContent = Math.floor(current);
                }, stepTime);
            });
            
            // Add smooth scrolling to links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });
        });
    </script>
}